// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PlayState.proto

#include "PlayState.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_PlayState_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PlayState_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HitState;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PlayState_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vector3Proto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_PlayState_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TransformProto;
}  // namespace protobuf_PlayState_2eproto
namespace state {
class Vector3ProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3Proto>
      _instance;
} _Vector3Proto_default_instance_;
class TransformProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TransformProto>
      _instance;
} _TransformProto_default_instance_;
class PlayStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayState>
      _instance;
} _PlayState_default_instance_;
class HitStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HitState>
      _instance;
} _HitState_default_instance_;
class WorldStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorldState>
      _instance;
} _WorldState_default_instance_;
}  // namespace state
namespace protobuf_PlayState_2eproto {
static void InitDefaultsVector3Proto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::state::_Vector3Proto_default_instance_;
    new (ptr) ::state::Vector3Proto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::state::Vector3Proto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vector3Proto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVector3Proto}, {}};

static void InitDefaultsTransformProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::state::_TransformProto_default_instance_;
    new (ptr) ::state::TransformProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::state::TransformProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TransformProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransformProto}, {
      &protobuf_PlayState_2eproto::scc_info_Vector3Proto.base,}};

static void InitDefaultsPlayState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::state::_PlayState_default_instance_;
    new (ptr) ::state::PlayState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::state::PlayState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlayState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlayState}, {
      &protobuf_PlayState_2eproto::scc_info_TransformProto.base,}};

static void InitDefaultsHitState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::state::_HitState_default_instance_;
    new (ptr) ::state::HitState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::state::HitState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HitState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHitState}, {}};

static void InitDefaultsWorldState() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::state::_WorldState_default_instance_;
    new (ptr) ::state::WorldState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::state::WorldState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_WorldState =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsWorldState}, {
      &protobuf_PlayState_2eproto::scc_info_TransformProto.base,
      &protobuf_PlayState_2eproto::scc_info_HitState.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Vector3Proto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TransformProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HitState.base);
  ::google::protobuf::internal::InitSCC(&scc_info_WorldState.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::Vector3Proto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::Vector3Proto, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::Vector3Proto, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::Vector3Proto, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::TransformProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::TransformProto, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::TransformProto, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::TransformProto, scale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, transform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, animstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, health_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, killcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, deathcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::PlayState, clntname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::HitState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::HitState, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::HitState, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::HitState, damage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, clntname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, transform_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, fired_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, health_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, hit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, hitstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, killpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, deathpoint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::state::WorldState, animstate_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::state::Vector3Proto)},
  { 8, -1, sizeof(::state::TransformProto)},
  { 16, -1, sizeof(::state::PlayState)},
  { 28, -1, sizeof(::state::HitState)},
  { 36, -1, sizeof(::state::WorldState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::state::_Vector3Proto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::state::_TransformProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::state::_PlayState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::state::_HitState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::state::_WorldState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "PlayState.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017PlayState.proto\022\005state\"/\n\014Vector3Proto"
      "\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"\202\001\n\016Tr"
      "ansformProto\022%\n\010position\030\001 \001(\0132\023.state.V"
      "ector3Proto\022%\n\010rotation\030\002 \001(\0132\023.state.Ve"
      "ctor3Proto\022\"\n\005scale\030\003 \001(\0132\023.state.Vector"
      "3Proto\"\241\001\n\tPlayState\022(\n\ttransform\030\001 \001(\0132"
      "\025.state.TransformProto\022\021\n\tanimState\030\002 \001("
      "\005\022\016\n\006health\030\003 \001(\005\022\021\n\tkillCount\030\004 \001(\005\022\022\n\n"
      "deathCount\030\005 \001(\005\022\016\n\006roomId\030\006 \001(\005\022\020\n\010clnt"
      "Name\030\007 \001(\t\"4\n\010HitState\022\014\n\004from\030\001 \001(\t\022\n\n\002"
      "to\030\002 \001(\t\022\016\n\006damage\030\003 \001(\005\"\341\001\n\nWorldState\022"
      "\016\n\006roomId\030\001 \001(\005\022\020\n\010clntName\030\002 \001(\t\022(\n\ttra"
      "nsform\030\003 \001(\0132\025.state.TransformProto\022\r\n\005f"
      "ired\030\004 \001(\010\022\016\n\006health\030\005 \001(\005\022\013\n\003hit\030\006 \001(\010\022"
      "!\n\010hitState\030\007 \001(\0132\017.state.HitState\022\021\n\tki"
      "llPoint\030\010 \001(\005\022\022\n\ndeathPoint\030\t \001(\005\022\021\n\tani"
      "mState\030\n \001(\005B\030\252\002\025Google.Protobuf.Stateb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 686);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PlayState.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PlayState_2eproto
namespace state {

// ===================================================================

void Vector3Proto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3Proto::kXFieldNumber;
const int Vector3Proto::kYFieldNumber;
const int Vector3Proto::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3Proto::Vector3Proto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PlayState_2eproto::scc_info_Vector3Proto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:state.Vector3Proto)
}
Vector3Proto::Vector3Proto(const Vector3Proto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:state.Vector3Proto)
}

void Vector3Proto::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vector3Proto::~Vector3Proto() {
  // @@protoc_insertion_point(destructor:state.Vector3Proto)
  SharedDtor();
}

void Vector3Proto::SharedDtor() {
}

void Vector3Proto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vector3Proto::descriptor() {
  ::protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3Proto& Vector3Proto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PlayState_2eproto::scc_info_Vector3Proto.base);
  return *internal_default_instance();
}


void Vector3Proto::Clear() {
// @@protoc_insertion_point(message_clear_start:state.Vector3Proto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3Proto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:state.Vector3Proto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:state.Vector3Proto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:state.Vector3Proto)
  return false;
#undef DO_
}

void Vector3Proto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:state.Vector3Proto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:state.Vector3Proto)
}

::google::protobuf::uint8* Vector3Proto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:state.Vector3Proto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state.Vector3Proto)
  return target;
}

size_t Vector3Proto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state.Vector3Proto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vector3Proto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state.Vector3Proto)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3Proto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3Proto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state.Vector3Proto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state.Vector3Proto)
    MergeFrom(*source);
  }
}

void Vector3Proto::MergeFrom(const Vector3Proto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state.Vector3Proto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3Proto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state.Vector3Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3Proto::CopyFrom(const Vector3Proto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state.Vector3Proto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3Proto::IsInitialized() const {
  return true;
}

void Vector3Proto::Swap(Vector3Proto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3Proto::InternalSwap(Vector3Proto* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vector3Proto::GetMetadata() const {
  protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TransformProto::InitAsDefaultInstance() {
  ::state::_TransformProto_default_instance_._instance.get_mutable()->position_ = const_cast< ::state::Vector3Proto*>(
      ::state::Vector3Proto::internal_default_instance());
  ::state::_TransformProto_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::state::Vector3Proto*>(
      ::state::Vector3Proto::internal_default_instance());
  ::state::_TransformProto_default_instance_._instance.get_mutable()->scale_ = const_cast< ::state::Vector3Proto*>(
      ::state::Vector3Proto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransformProto::kPositionFieldNumber;
const int TransformProto::kRotationFieldNumber;
const int TransformProto::kScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransformProto::TransformProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PlayState_2eproto::scc_info_TransformProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:state.TransformProto)
}
TransformProto::TransformProto(const TransformProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::state::Vector3Proto(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::state::Vector3Proto(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::state::Vector3Proto(*from.scale_);
  } else {
    scale_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:state.TransformProto)
}

void TransformProto::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&position_)) + sizeof(scale_));
}

TransformProto::~TransformProto() {
  // @@protoc_insertion_point(destructor:state.TransformProto)
  SharedDtor();
}

void TransformProto::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
  if (this != internal_default_instance()) delete scale_;
}

void TransformProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TransformProto::descriptor() {
  ::protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TransformProto& TransformProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PlayState_2eproto::scc_info_TransformProto.base);
  return *internal_default_instance();
}


void TransformProto::Clear() {
// @@protoc_insertion_point(message_clear_start:state.TransformProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
  _internal_metadata_.Clear();
}

bool TransformProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:state.TransformProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .state.Vector3Proto position = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .state.Vector3Proto rotation = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .state.Vector3Proto scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:state.TransformProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:state.TransformProto)
  return false;
#undef DO_
}

void TransformProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:state.TransformProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state.Vector3Proto position = 1;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_position(), output);
  }

  // .state.Vector3Proto rotation = 2;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_rotation(), output);
  }

  // .state.Vector3Proto scale = 3;
  if (this->has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_scale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:state.TransformProto)
}

::google::protobuf::uint8* TransformProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:state.TransformProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state.Vector3Proto position = 1;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_position(), deterministic, target);
  }

  // .state.Vector3Proto rotation = 2;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_rotation(), deterministic, target);
  }

  // .state.Vector3Proto scale = 3;
  if (this->has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_scale(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state.TransformProto)
  return target;
}

size_t TransformProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state.TransformProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .state.Vector3Proto position = 1;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .state.Vector3Proto rotation = 2;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // .state.Vector3Proto scale = 3;
  if (this->has_scale()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scale_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TransformProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state.TransformProto)
  GOOGLE_DCHECK_NE(&from, this);
  const TransformProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransformProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state.TransformProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state.TransformProto)
    MergeFrom(*source);
  }
}

void TransformProto::MergeFrom(const TransformProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state.TransformProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::state::Vector3Proto::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::state::Vector3Proto::MergeFrom(from.rotation());
  }
  if (from.has_scale()) {
    mutable_scale()->::state::Vector3Proto::MergeFrom(from.scale());
  }
}

void TransformProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state.TransformProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransformProto::CopyFrom(const TransformProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state.TransformProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TransformProto::IsInitialized() const {
  return true;
}

void TransformProto::Swap(TransformProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransformProto::InternalSwap(TransformProto* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(scale_, other->scale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TransformProto::GetMetadata() const {
  protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayState::InitAsDefaultInstance() {
  ::state::_PlayState_default_instance_._instance.get_mutable()->transform_ = const_cast< ::state::TransformProto*>(
      ::state::TransformProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayState::kTransformFieldNumber;
const int PlayState::kAnimStateFieldNumber;
const int PlayState::kHealthFieldNumber;
const int PlayState::kKillCountFieldNumber;
const int PlayState::kDeathCountFieldNumber;
const int PlayState::kRoomIdFieldNumber;
const int PlayState::kClntNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayState::PlayState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PlayState_2eproto::scc_info_PlayState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:state.PlayState)
}
PlayState::PlayState(const PlayState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clntname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clntname().size() > 0) {
    clntname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clntname_);
  }
  if (from.has_transform()) {
    transform_ = new ::state::TransformProto(*from.transform_);
  } else {
    transform_ = NULL;
  }
  ::memcpy(&animstate_, &from.animstate_,
    static_cast<size_t>(reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&animstate_)) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:state.PlayState)
}

void PlayState::SharedCtor() {
  clntname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&transform_)) + sizeof(roomid_));
}

PlayState::~PlayState() {
  // @@protoc_insertion_point(destructor:state.PlayState)
  SharedDtor();
}

void PlayState::SharedDtor() {
  clntname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transform_;
}

void PlayState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayState::descriptor() {
  ::protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayState& PlayState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PlayState_2eproto::scc_info_PlayState.base);
  return *internal_default_instance();
}


void PlayState::Clear() {
// @@protoc_insertion_point(message_clear_start:state.PlayState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clntname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transform_ != NULL) {
    delete transform_;
  }
  transform_ = NULL;
  ::memset(&animstate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&animstate_)) + sizeof(roomid_));
  _internal_metadata_.Clear();
}

bool PlayState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:state.PlayState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .state.TransformProto transform = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 animState = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 health = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 killCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deathCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deathcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roomId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clntName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clntname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clntname().data(), static_cast<int>(this->clntname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "state.PlayState.clntName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:state.PlayState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:state.PlayState)
  return false;
#undef DO_
}

void PlayState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:state.PlayState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state.TransformProto transform = 1;
  if (this->has_transform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_transform(), output);
  }

  // int32 animState = 2;
  if (this->animstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->animstate(), output);
  }

  // int32 health = 3;
  if (this->health() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->health(), output);
  }

  // int32 killCount = 4;
  if (this->killcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->killcount(), output);
  }

  // int32 deathCount = 5;
  if (this->deathcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->deathcount(), output);
  }

  // int32 roomId = 6;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->roomid(), output);
  }

  // string clntName = 7;
  if (this->clntname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clntname().data(), static_cast<int>(this->clntname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.PlayState.clntName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->clntname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:state.PlayState)
}

::google::protobuf::uint8* PlayState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:state.PlayState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state.TransformProto transform = 1;
  if (this->has_transform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_transform(), deterministic, target);
  }

  // int32 animState = 2;
  if (this->animstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->animstate(), target);
  }

  // int32 health = 3;
  if (this->health() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->health(), target);
  }

  // int32 killCount = 4;
  if (this->killcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->killcount(), target);
  }

  // int32 deathCount = 5;
  if (this->deathcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->deathcount(), target);
  }

  // int32 roomId = 6;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->roomid(), target);
  }

  // string clntName = 7;
  if (this->clntname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clntname().data(), static_cast<int>(this->clntname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.PlayState.clntName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->clntname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state.PlayState)
  return target;
}

size_t PlayState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state.PlayState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string clntName = 7;
  if (this->clntname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clntname());
  }

  // .state.TransformProto transform = 1;
  if (this->has_transform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transform_);
  }

  // int32 animState = 2;
  if (this->animstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animstate());
  }

  // int32 health = 3;
  if (this->health() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->health());
  }

  // int32 killCount = 4;
  if (this->killcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killcount());
  }

  // int32 deathCount = 5;
  if (this->deathcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deathcount());
  }

  // int32 roomId = 6;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state.PlayState)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state.PlayState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state.PlayState)
    MergeFrom(*source);
  }
}

void PlayState::MergeFrom(const PlayState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state.PlayState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clntname().size() > 0) {

    clntname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clntname_);
  }
  if (from.has_transform()) {
    mutable_transform()->::state::TransformProto::MergeFrom(from.transform());
  }
  if (from.animstate() != 0) {
    set_animstate(from.animstate());
  }
  if (from.health() != 0) {
    set_health(from.health());
  }
  if (from.killcount() != 0) {
    set_killcount(from.killcount());
  }
  if (from.deathcount() != 0) {
    set_deathcount(from.deathcount());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void PlayState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state.PlayState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayState::CopyFrom(const PlayState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state.PlayState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayState::IsInitialized() const {
  return true;
}

void PlayState::Swap(PlayState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayState::InternalSwap(PlayState* other) {
  using std::swap;
  clntname_.Swap(&other->clntname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transform_, other->transform_);
  swap(animstate_, other->animstate_);
  swap(health_, other->health_);
  swap(killcount_, other->killcount_);
  swap(deathcount_, other->deathcount_);
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayState::GetMetadata() const {
  protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HitState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HitState::kFromFieldNumber;
const int HitState::kToFieldNumber;
const int HitState::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HitState::HitState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PlayState_2eproto::scc_info_HitState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:state.HitState)
}
HitState::HitState(const HitState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  damage_ = from.damage_;
  // @@protoc_insertion_point(copy_constructor:state.HitState)
}

void HitState::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  damage_ = 0;
}

HitState::~HitState() {
  // @@protoc_insertion_point(destructor:state.HitState)
  SharedDtor();
}

void HitState::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HitState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HitState::descriptor() {
  ::protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HitState& HitState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PlayState_2eproto::scc_info_HitState.base);
  return *internal_default_instance();
}


void HitState::Clear() {
// @@protoc_insertion_point(message_clear_start:state.HitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  damage_ = 0;
  _internal_metadata_.Clear();
}

bool HitState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:state.HitState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "state.HitState.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "state.HitState.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 damage = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:state.HitState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:state.HitState)
  return false;
#undef DO_
}

void HitState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:state.HitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.HitState.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.HitState.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // int32 damage = 3;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->damage(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:state.HitState)
}

::google::protobuf::uint8* HitState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:state.HitState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.HitState.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.HitState.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // int32 damage = 3;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->damage(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state.HitState)
  return target;
}

size_t HitState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state.HitState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // int32 damage = 3;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HitState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state.HitState)
  GOOGLE_DCHECK_NE(&from, this);
  const HitState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HitState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state.HitState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state.HitState)
    MergeFrom(*source);
  }
}

void HitState::MergeFrom(const HitState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state.HitState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
}

void HitState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state.HitState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HitState::CopyFrom(const HitState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state.HitState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HitState::IsInitialized() const {
  return true;
}

void HitState::Swap(HitState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HitState::InternalSwap(HitState* other) {
  using std::swap;
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(damage_, other->damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HitState::GetMetadata() const {
  protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WorldState::InitAsDefaultInstance() {
  ::state::_WorldState_default_instance_._instance.get_mutable()->transform_ = const_cast< ::state::TransformProto*>(
      ::state::TransformProto::internal_default_instance());
  ::state::_WorldState_default_instance_._instance.get_mutable()->hitstate_ = const_cast< ::state::HitState*>(
      ::state::HitState::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldState::kRoomIdFieldNumber;
const int WorldState::kClntNameFieldNumber;
const int WorldState::kTransformFieldNumber;
const int WorldState::kFiredFieldNumber;
const int WorldState::kHealthFieldNumber;
const int WorldState::kHitFieldNumber;
const int WorldState::kHitStateFieldNumber;
const int WorldState::kKillPointFieldNumber;
const int WorldState::kDeathPointFieldNumber;
const int WorldState::kAnimStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldState::WorldState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PlayState_2eproto::scc_info_WorldState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:state.WorldState)
}
WorldState::WorldState(const WorldState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clntname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clntname().size() > 0) {
    clntname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clntname_);
  }
  if (from.has_transform()) {
    transform_ = new ::state::TransformProto(*from.transform_);
  } else {
    transform_ = NULL;
  }
  if (from.has_hitstate()) {
    hitstate_ = new ::state::HitState(*from.hitstate_);
  } else {
    hitstate_ = NULL;
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&animstate_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(animstate_));
  // @@protoc_insertion_point(copy_constructor:state.WorldState)
}

void WorldState::SharedCtor() {
  clntname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&transform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animstate_) -
      reinterpret_cast<char*>(&transform_)) + sizeof(animstate_));
}

WorldState::~WorldState() {
  // @@protoc_insertion_point(destructor:state.WorldState)
  SharedDtor();
}

void WorldState::SharedDtor() {
  clntname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete transform_;
  if (this != internal_default_instance()) delete hitstate_;
}

void WorldState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorldState::descriptor() {
  ::protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldState& WorldState::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PlayState_2eproto::scc_info_WorldState.base);
  return *internal_default_instance();
}


void WorldState::Clear() {
// @@protoc_insertion_point(message_clear_start:state.WorldState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clntname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transform_ != NULL) {
    delete transform_;
  }
  transform_ = NULL;
  if (GetArenaNoVirtual() == NULL && hitstate_ != NULL) {
    delete hitstate_;
  }
  hitstate_ = NULL;
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&animstate_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(animstate_));
  _internal_metadata_.Clear();
}

bool WorldState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:state.WorldState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string clntName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clntname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clntname().data(), static_cast<int>(this->clntname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "state.WorldState.clntName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .state.TransformProto transform = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transform()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool fired = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &fired_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 health = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &health_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hit = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .state.HitState hitState = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hitstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 killPoint = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &killpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deathPoint = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deathpoint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 animState = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &animstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:state.WorldState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:state.WorldState)
  return false;
#undef DO_
}

void WorldState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:state.WorldState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomid(), output);
  }

  // string clntName = 2;
  if (this->clntname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clntname().data(), static_cast<int>(this->clntname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.WorldState.clntName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->clntname(), output);
  }

  // .state.TransformProto transform = 3;
  if (this->has_transform()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_transform(), output);
  }

  // bool fired = 4;
  if (this->fired() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->fired(), output);
  }

  // int32 health = 5;
  if (this->health() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->health(), output);
  }

  // bool hit = 6;
  if (this->hit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->hit(), output);
  }

  // .state.HitState hitState = 7;
  if (this->has_hitstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_hitstate(), output);
  }

  // int32 killPoint = 8;
  if (this->killpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->killpoint(), output);
  }

  // int32 deathPoint = 9;
  if (this->deathpoint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->deathpoint(), output);
  }

  // int32 animState = 10;
  if (this->animstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->animstate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:state.WorldState)
}

::google::protobuf::uint8* WorldState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:state.WorldState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomid(), target);
  }

  // string clntName = 2;
  if (this->clntname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clntname().data(), static_cast<int>(this->clntname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "state.WorldState.clntName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->clntname(), target);
  }

  // .state.TransformProto transform = 3;
  if (this->has_transform()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_transform(), deterministic, target);
  }

  // bool fired = 4;
  if (this->fired() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->fired(), target);
  }

  // int32 health = 5;
  if (this->health() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->health(), target);
  }

  // bool hit = 6;
  if (this->hit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->hit(), target);
  }

  // .state.HitState hitState = 7;
  if (this->has_hitstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_hitstate(), deterministic, target);
  }

  // int32 killPoint = 8;
  if (this->killpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->killpoint(), target);
  }

  // int32 deathPoint = 9;
  if (this->deathpoint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->deathpoint(), target);
  }

  // int32 animState = 10;
  if (this->animstate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->animstate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state.WorldState)
  return target;
}

size_t WorldState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state.WorldState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string clntName = 2;
  if (this->clntname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clntname());
  }

  // .state.TransformProto transform = 3;
  if (this->has_transform()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *transform_);
  }

  // .state.HitState hitState = 7;
  if (this->has_hitstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *hitstate_);
  }

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  // int32 health = 5;
  if (this->health() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->health());
  }

  // bool fired = 4;
  if (this->fired() != 0) {
    total_size += 1 + 1;
  }

  // bool hit = 6;
  if (this->hit() != 0) {
    total_size += 1 + 1;
  }

  // int32 killPoint = 8;
  if (this->killpoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->killpoint());
  }

  // int32 deathPoint = 9;
  if (this->deathpoint() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deathpoint());
  }

  // int32 animState = 10;
  if (this->animstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->animstate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorldState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state.WorldState)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state.WorldState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state.WorldState)
    MergeFrom(*source);
  }
}

void WorldState::MergeFrom(const WorldState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state.WorldState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clntname().size() > 0) {

    clntname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clntname_);
  }
  if (from.has_transform()) {
    mutable_transform()->::state::TransformProto::MergeFrom(from.transform());
  }
  if (from.has_hitstate()) {
    mutable_hitstate()->::state::HitState::MergeFrom(from.hitstate());
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.health() != 0) {
    set_health(from.health());
  }
  if (from.fired() != 0) {
    set_fired(from.fired());
  }
  if (from.hit() != 0) {
    set_hit(from.hit());
  }
  if (from.killpoint() != 0) {
    set_killpoint(from.killpoint());
  }
  if (from.deathpoint() != 0) {
    set_deathpoint(from.deathpoint());
  }
  if (from.animstate() != 0) {
    set_animstate(from.animstate());
  }
}

void WorldState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state.WorldState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldState::CopyFrom(const WorldState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state.WorldState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldState::IsInitialized() const {
  return true;
}

void WorldState::Swap(WorldState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldState::InternalSwap(WorldState* other) {
  using std::swap;
  clntname_.Swap(&other->clntname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transform_, other->transform_);
  swap(hitstate_, other->hitstate_);
  swap(roomid_, other->roomid_);
  swap(health_, other->health_);
  swap(fired_, other->fired_);
  swap(hit_, other->hit_);
  swap(killpoint_, other->killpoint_);
  swap(deathpoint_, other->deathpoint_);
  swap(animstate_, other->animstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorldState::GetMetadata() const {
  protobuf_PlayState_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PlayState_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace state
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::state::Vector3Proto* Arena::CreateMaybeMessage< ::state::Vector3Proto >(Arena* arena) {
  return Arena::CreateInternal< ::state::Vector3Proto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::state::TransformProto* Arena::CreateMaybeMessage< ::state::TransformProto >(Arena* arena) {
  return Arena::CreateInternal< ::state::TransformProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::state::PlayState* Arena::CreateMaybeMessage< ::state::PlayState >(Arena* arena) {
  return Arena::CreateInternal< ::state::PlayState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::state::HitState* Arena::CreateMaybeMessage< ::state::HitState >(Arena* arena) {
  return Arena::CreateInternal< ::state::HitState >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::state::WorldState* Arena::CreateMaybeMessage< ::state::WorldState >(Arena* arena) {
  return Arena::CreateInternal< ::state::WorldState >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
