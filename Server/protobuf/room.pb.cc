// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#include "room.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_room_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_room_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Client;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_room_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoomInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_room_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoomList_RoomsEntry_DoNotUse;
}  // namespace protobuf_room_2eproto
namespace packet {
class ClientDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Client>
      _instance;
} _Client_default_instance_;
class RoomInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfo>
      _instance;
} _RoomInfo_default_instance_;
class RoomList_RoomsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomList_RoomsEntry_DoNotUse>
      _instance;
} _RoomList_RoomsEntry_DoNotUse_default_instance_;
class RoomListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomList>
      _instance;
} _RoomList_default_instance_;
}  // namespace packet
namespace protobuf_room_2eproto {
static void InitDefaultsClient() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_Client_default_instance_;
    new (ptr) ::packet::Client();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::Client::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Client =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClient}, {}};

static void InitDefaultsRoomInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_RoomInfo_default_instance_;
    new (ptr) ::packet::RoomInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::RoomInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoomInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomInfo}, {
      &protobuf_room_2eproto::scc_info_Client.base,}};

static void InitDefaultsRoomList_RoomsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_RoomList_RoomsEntry_DoNotUse_default_instance_;
    new (ptr) ::packet::RoomList_RoomsEntry_DoNotUse();
  }
  ::packet::RoomList_RoomsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoomList_RoomsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomList_RoomsEntry_DoNotUse}, {
      &protobuf_room_2eproto::scc_info_RoomInfo.base,}};

static void InitDefaultsRoomList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::packet::_RoomList_default_instance_;
    new (ptr) ::packet::RoomList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::packet::RoomList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoomList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomList}, {
      &protobuf_room_2eproto::scc_info_RoomList_RoomsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Client.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomList_RoomsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomList.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Client, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Client, clntid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Client, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Client, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::Client, ready_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, redteam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, blueteam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, readycount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomInfo, host_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomList_RoomsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomList_RoomsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomList_RoomsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomList_RoomsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::packet::RoomList, rooms_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::packet::Client)},
  { 9, -1, sizeof(::packet::RoomInfo)},
  { 22, 29, sizeof(::packet::RoomList_RoomsEntry_DoNotUse)},
  { 31, -1, sizeof(::packet::RoomList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_Client_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_RoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_RoomList_RoomsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::packet::_RoomList_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "room.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nroom.proto\022\006packet\"G\n\006Client\022\016\n\006clntId"
      "\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\020\n\010position\030\003 \001(\005\022\r"
      "\n\005ready\030\004 \001(\010\"\255\001\n\010RoomInfo\022\016\n\006roomId\030\001 \001"
      "(\005\022\014\n\004name\030\002 \001(\t\022\r\n\005limit\030\003 \001(\005\022\017\n\007curre"
      "nt\030\004 \001(\005\022\037\n\007redTeam\030\005 \003(\0132\016.packet.Clien"
      "t\022 \n\010blueTeam\030\006 \003(\0132\016.packet.Client\022\022\n\nr"
      "eadyCount\030\007 \001(\005\022\014\n\004host\030\010 \001(\005\"v\n\010RoomLis"
      "t\022*\n\005rooms\030\001 \003(\0132\033.packet.RoomList.Rooms"
      "Entry\032>\n\nRoomsEntry\022\013\n\003key\030\001 \001(\005\022\037\n\005valu"
      "e\030\002 \001(\0132\020.packet.RoomInfo:\0028\001B\036\252\002\033Google"
      ".Protobuf.Packet.Roomb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "room.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_room_2eproto
namespace packet {

// ===================================================================

void Client::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Client::kClntIdFieldNumber;
const int Client::kNameFieldNumber;
const int Client::kPositionFieldNumber;
const int Client::kReadyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Client::Client()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_room_2eproto::scc_info_Client.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.Client)
}
Client::Client(const Client& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&clntid_, &from.clntid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ready_) -
    reinterpret_cast<char*>(&clntid_)) + sizeof(ready_));
  // @@protoc_insertion_point(copy_constructor:packet.Client)
}

void Client::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clntid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ready_) -
      reinterpret_cast<char*>(&clntid_)) + sizeof(ready_));
}

Client::~Client() {
  // @@protoc_insertion_point(destructor:packet.Client)
  SharedDtor();
}

void Client::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Client::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Client::descriptor() {
  ::protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Client& Client::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_room_2eproto::scc_info_Client.base);
  return *internal_default_instance();
}


void Client::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.Client)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&clntid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ready_) -
      reinterpret_cast<char*>(&clntid_)) + sizeof(ready_));
  _internal_metadata_.Clear();
}

bool Client::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.Client)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 clntId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clntid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.Client.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ready = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ready_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.Client)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.Client)
  return false;
#undef DO_
}

void Client::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.Client)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clntId = 1;
  if (this->clntid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clntid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.Client.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 position = 3;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->position(), output);
  }

  // bool ready = 4;
  if (this->ready() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->ready(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.Client)
}

::google::protobuf::uint8* Client::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.Client)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clntId = 1;
  if (this->clntid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clntid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.Client.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 position = 3;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->position(), target);
  }

  // bool ready = 4;
  if (this->ready() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->ready(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.Client)
  return target;
}

size_t Client::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.Client)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 clntId = 1;
  if (this->clntid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clntid());
  }

  // int32 position = 3;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->position());
  }

  // bool ready = 4;
  if (this->ready() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Client::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.Client)
  GOOGLE_DCHECK_NE(&from, this);
  const Client* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Client>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.Client)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.Client)
    MergeFrom(*source);
  }
}

void Client::MergeFrom(const Client& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.Client)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.clntid() != 0) {
    set_clntid(from.clntid());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
  if (from.ready() != 0) {
    set_ready(from.ready());
  }
}

void Client::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Client::CopyFrom(const Client& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.Client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Client::IsInitialized() const {
  return true;
}

void Client::Swap(Client* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Client::InternalSwap(Client* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(clntid_, other->clntid_);
  swap(position_, other->position_);
  swap(ready_, other->ready_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Client::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfo::kRoomIdFieldNumber;
const int RoomInfo::kNameFieldNumber;
const int RoomInfo::kLimitFieldNumber;
const int RoomInfo::kCurrentFieldNumber;
const int RoomInfo::kRedTeamFieldNumber;
const int RoomInfo::kBlueTeamFieldNumber;
const int RoomInfo::kReadyCountFieldNumber;
const int RoomInfo::kHostFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfo::RoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_room_2eproto::scc_info_RoomInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.RoomInfo)
}
RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      redteam_(from.redteam_),
      blueteam_(from.blueteam_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&host_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(host_));
  // @@protoc_insertion_point(copy_constructor:packet.RoomInfo)
}

void RoomInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(host_));
}

RoomInfo::~RoomInfo() {
  // @@protoc_insertion_point(destructor:packet.RoomInfo)
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomInfo::descriptor() {
  ::protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfo& RoomInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_room_2eproto::scc_info_RoomInfo.base);
  return *internal_default_instance();
}


void RoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redteam_.Clear();
  blueteam_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&host_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(host_));
  _internal_metadata_.Clear();
}

bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.RoomInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "packet.RoomInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 current = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .packet.Client redTeam = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_redteam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .packet.Client blueTeam = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_blueteam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 readyCount = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &readycount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 host = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &host_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.RoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.RoomInfo)
  return false;
#undef DO_
}

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomid(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.RoomInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->limit(), output);
  }

  // int32 current = 4;
  if (this->current() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->current(), output);
  }

  // repeated .packet.Client redTeam = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->redteam_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->redteam(static_cast<int>(i)),
      output);
  }

  // repeated .packet.Client blueTeam = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blueteam_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->blueteam(static_cast<int>(i)),
      output);
  }

  // int32 readyCount = 7;
  if (this->readycount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->readycount(), output);
  }

  // int32 host = 8;
  if (this->host() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->host(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.RoomInfo)
}

::google::protobuf::uint8* RoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomid(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "packet.RoomInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->limit(), target);
  }

  // int32 current = 4;
  if (this->current() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->current(), target);
  }

  // repeated .packet.Client redTeam = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->redteam_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->redteam(static_cast<int>(i)), deterministic, target);
  }

  // repeated .packet.Client blueTeam = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blueteam_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->blueteam(static_cast<int>(i)), deterministic, target);
  }

  // int32 readyCount = 7;
  if (this->readycount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->readycount(), target);
  }

  // int32 host = 8;
  if (this->host() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->host(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.RoomInfo)
  return target;
}

size_t RoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.RoomInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .packet.Client redTeam = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->redteam_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->redteam(static_cast<int>(i)));
    }
  }

  // repeated .packet.Client blueTeam = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->blueteam_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->blueteam(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  // int32 limit = 3;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // int32 current = 4;
  if (this->current() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->current());
  }

  // int32 readyCount = 7;
  if (this->readycount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->readycount());
  }

  // int32 host = 8;
  if (this->host() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->host());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.RoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.RoomInfo)
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  redteam_.MergeFrom(from.redteam_);
  blueteam_.MergeFrom(from.blueteam_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.current() != 0) {
    set_current(from.current());
  }
  if (from.readycount() != 0) {
    set_readycount(from.readycount());
  }
  if (from.host() != 0) {
    set_host(from.host());
  }
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfo::InternalSwap(RoomInfo* other) {
  using std::swap;
  CastToBase(&redteam_)->InternalSwap(CastToBase(&other->redteam_));
  CastToBase(&blueteam_)->InternalSwap(CastToBase(&other->blueteam_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(limit_, other->limit_);
  swap(current_, other->current_);
  swap(readycount_, other->readycount_);
  swap(host_, other->host_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RoomList_RoomsEntry_DoNotUse::RoomList_RoomsEntry_DoNotUse() {}
RoomList_RoomsEntry_DoNotUse::RoomList_RoomsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RoomList_RoomsEntry_DoNotUse::MergeFrom(const RoomList_RoomsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RoomList_RoomsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[2];
}
void RoomList_RoomsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RoomList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomList::kRoomsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomList::RoomList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_room_2eproto::scc_info_RoomList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:packet.RoomList)
}
RoomList::RoomList(const RoomList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rooms_.MergeFrom(from.rooms_);
  // @@protoc_insertion_point(copy_constructor:packet.RoomList)
}

void RoomList::SharedCtor() {
}

RoomList::~RoomList() {
  // @@protoc_insertion_point(destructor:packet.RoomList)
  SharedDtor();
}

void RoomList::SharedDtor() {
}

void RoomList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomList::descriptor() {
  ::protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomList& RoomList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_room_2eproto::scc_info_RoomList.base);
  return *internal_default_instance();
}


void RoomList::Clear() {
// @@protoc_insertion_point(message_clear_start:packet.RoomList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rooms_.Clear();
  _internal_metadata_.Clear();
}

bool RoomList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:packet.RoomList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .packet.RoomInfo> rooms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          RoomList_RoomsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RoomList_RoomsEntry_DoNotUse,
              ::google::protobuf::int32, ::packet::RoomInfo,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo > > parser(&rooms_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:packet.RoomList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:packet.RoomList)
  return false;
#undef DO_
}

void RoomList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:packet.RoomList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .packet.RoomInfo> rooms = 1;
  if (!this->rooms().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->rooms().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->rooms().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_iterator
          it = this->rooms().begin();
          it != this->rooms().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RoomList_RoomsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(rooms_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<RoomList_RoomsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_iterator
          it = this->rooms().begin();
          it != this->rooms().end(); ++it) {
        entry.reset(rooms_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:packet.RoomList)
}

::google::protobuf::uint8* RoomList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:packet.RoomList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .packet.RoomInfo> rooms = 1;
  if (!this->rooms().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->rooms().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->rooms().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_iterator
          it = this->rooms().begin();
          it != this->rooms().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RoomList_RoomsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(rooms_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<RoomList_RoomsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_iterator
          it = this->rooms().begin();
          it != this->rooms().end(); ++it) {
        entry.reset(rooms_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:packet.RoomList)
  return target;
}

size_t RoomList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:packet.RoomList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, .packet.RoomInfo> rooms = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->rooms_size());
  {
    ::std::unique_ptr<RoomList_RoomsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::packet::RoomInfo >::const_iterator
        it = this->rooms().begin();
        it != this->rooms().end(); ++it) {
      entry.reset(rooms_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:packet.RoomList)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:packet.RoomList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:packet.RoomList)
    MergeFrom(*source);
  }
}

void RoomList::MergeFrom(const RoomList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:packet.RoomList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rooms_.MergeFrom(from.rooms_);
}

void RoomList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:packet.RoomList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomList::CopyFrom(const RoomList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:packet.RoomList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomList::IsInitialized() const {
  return true;
}

void RoomList::Swap(RoomList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomList::InternalSwap(RoomList* other) {
  using std::swap;
  rooms_.Swap(&other->rooms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomList::GetMetadata() const {
  protobuf_room_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_room_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace packet
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::Client* Arena::CreateMaybeMessage< ::packet::Client >(Arena* arena) {
  return Arena::CreateInternal< ::packet::Client >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::RoomInfo* Arena::CreateMaybeMessage< ::packet::RoomInfo >(Arena* arena) {
  return Arena::CreateInternal< ::packet::RoomInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::RoomList_RoomsEntry_DoNotUse* Arena::CreateMaybeMessage< ::packet::RoomList_RoomsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::packet::RoomList_RoomsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::packet::RoomList* Arena::CreateMaybeMessage< ::packet::RoomList >(Arena* arena) {
  return Arena::CreateInternal< ::packet::RoomList >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
